{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "faceometerUploadInterval" : {
            "type": "int",
            "minValue": 10,
            "defaultValue": 300
        },
        "projectName": {
            "type": "string",
            "defaultValue": "faceometer",
            "maxLength": 10
        }
    },
    "variables": {
        "uniqueStr": "[substring(uniqueString(resourceGroup().id, deployment().name), 0, 7)]",
        "prefix": "[concat(parameters('projectName'), variables('uniqueStr'))]",
        "hostingPlanName": "[concat(variables('prefix'), '-appserviceplan')]",
        "cognitiveServicesFaceName": "[concat(variables('prefix'), '-faceapi')]",
        "cognitiveServicesCVName": "[concat(variables('prefix'), '-cv')]",
        "functionAppName": "[concat(variables('prefix'), '-functions')]",
        "storageAccountName": "[concat(variables('prefix'), 'storage')]"
    },
    "resources": [
        {
            "comments": "Used for checking the faces in the images. Must be deployed in westus.",
            "type": "Microsoft.CognitiveServices/accounts",
            "sku": {
                "name": "F0"
            },
            "kind": "Face",
            "name": "[variables('cognitiveServicesFaceName')]",
            "apiVersion": "2016-02-01-preview",
            "location": "westus",
            "properties": {},
            "resources": [],
            "dependsOn": [],
            "tags": { "source": "https://blog.jourdant.me" }
        },
        {
            "comments": "Used for checking the faces in the images. Must be deployed in westus.",
            "type": "Microsoft.CognitiveServices/accounts",
            "sku": {
                "name": "F0"
            },
            "kind": "ComputerVision",
            "name": "[variables('cognitiveServicesCVName')]",
            "apiVersion": "2016-02-01-preview",
            "location": "westus",
            "properties": {},
            "resources": [],
            "dependsOn": [],
            "tags": { "source": "https://blog.jourdant.me" }
        },
        {
            "comments": "Used for storing the Azure Functions Logs and Image files",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2016-01-01",
            "location": "[resourceGroup().location]",
            "properties": {},
            "resources": [],
            "dependsOn": [],
            "tags": { "source": "https://blog.jourdant.me" }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2015-08-01",
            "name": "[variables('hostingPlanName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "name": "[variables('hostingPlanName')]",
                "computeMode": "Dynamic"
                
            },
            "sku":  {"name":"Y1", "tier": "Dynamic"},
            "tags": { "source": "https://blog.jourdant.me" }
        },
        {
            "apiVersion": "2015-08-01",
            "name": "[variables('functionAppName')]",
            "type": "Microsoft.Web/sites",
            "kind": "functionapp",
            "location": "[resourceGroup().location]",
            "tags": { "source": "https://blog.jourdant.me" },
            "properties": {
                "name": "[variables('functionAppName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "config" :{ 
                    "bindings": [
                        {
                            "type": "httpTrigger",
                            "direction": "in",
                            "name": "req",
                            "authLevel": "function"
                        },
                        {
                            "type": "http",
                            "direction": "out",
                            "name": "res"
                        }
                    ],
                    "disabled": false
                },
                "siteConfig": {
                    "appSettings": [
                        { "name": "AZUREJOBS_EXTENSION_VERSION", "value": "beta" },
                        { "name": "FUNCTIONS_EXTENSION_VERSION", "value": "latest" },
                        { "name": "WEBSITE_NODE_DEFAULT_VERSION", "value": "6.4.0" },
                        { "name": "AzureWebJobsDashboard", "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]" },
                        { "name": "AzureWebJobsStorage", "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]" },
                        

                        { "name": "FACEOMETER_AZURESTORAGECONNECTIONSTRING", "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]" },
                        { "name": "FACEOMETER_COGNITIVESERVICESCVKEY", "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', variables('cognitiveServicesCVName')), providers('Microsoft.CognitiveServices', 'accounts').apiVersions[0]).key1]" },
                        { "name": "FACEOMETER_COGNITIVESERVICESFACEKEY", "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', variables('cognitiveServicesFaceName')), providers('Microsoft.CognitiveServices', 'accounts').apiVersions[0]).key1]" },
                        { "name": "FACEOMETER_POWERBIEMOTIONURL", "value": "" },
                        { "name": "FACEOMETER_POWERBIFACEURL", "value": "" },
                        { "name": "FACEOMETER_REFRESHTIME", "value": "[parameters('faceometerUploadInterval')]" }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.CognitiveServices/accounts', variables('cognitiveServicesFaceName'))]",
                "[resourceId('Microsoft.CognitiveServices/accounts', variables('cognitiveServicesCVName'))]"
            ]
        }
    ],
    "outputs": {
        "functionAppName": {
            "type": "string",
            "value": "[variables('functionAppName')]"
        }
    }
}